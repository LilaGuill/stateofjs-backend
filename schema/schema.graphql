type Query {
  frameworks: [Framework!]!
  rankings: [Ranking!]!
  overviews: [Overview!]!
  usages: [Usage!]!
  experiences(id: String!): [Experiences!]!
}

type Framework {
  _id: ID!
  stars: Int!
  symbol: String!
  name: String!
  url: String
}

type Ranking {
  _id: ID!
  id: String!
  awareness: [Data]
  interest: [Data]
  satisfaction: [Data]
}

type Data {
  year: Int
  rank: Int
  percentage: String
}

type Overview {
  _id: ID!
  id: String!
  buckets: [Bucket]
}

type Bucket {
  id: String
  count: Int
  percentage: String
}
type Usage {
  average: String
  total: Int
  id: String
  ranges: [Range]
}
type Range {
  range: String
  percentage: String
  count: Int
}

type Experiences {
  id: String
  data: [Experience]
}

type Experience {
  year: Int
  total: Int
  completion: [Completion]
  awarenessInterestSatisfaction: [AwarenessInterestSatisfaction]
  buckets: [Bucket]
}

type Completion {
  count: Int
  percentage: Int
}

type AwarenessInterestSatisfaction {
  awareness: Int
  interest: Int
  satisfaction: Int
}
